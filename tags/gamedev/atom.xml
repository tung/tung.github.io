<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Tung&#x27;s Word Box - gamedev</title>
    <subtitle>Programming, game development and other technical tidbits</subtitle>
    <link rel="self" type="application/atom+xml" href="https://tung.github.io/tags/gamedev/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://tung.github.io"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2025-03-19T00:00:00+00:00</updated>
    <id>https://tung.github.io/tags/gamedev/atom.xml</id>
    <entry xml:lang="en">
        <title>Learning Zig&#x27;s Build System using raylib</title>
        <published>2024-11-06T00:00:00+00:00</published>
        <updated>2025-03-19T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              tungtn
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://tung.github.io/posts/learning-zigs-build-system-using-raylib/"/>
        <id>https://tung.github.io/posts/learning-zigs-build-system-using-raylib/</id>
        
        <summary type="html">&lt;p&gt;&lt;strong&gt;Edit&lt;&#x2F;strong&gt;: Updated for Zig 0.14.0 and a version of raylib that works with it.&lt;&#x2F;p&gt;
&lt;p&gt;I picked up some Zig recently and figured I&#x27;d take the chance to learn its build system using raylib.
raylib already has pretty good community-maintained idiomatic Zig bindings, but we want to learn, so we&#x27;re going to do it the &quot;hard&quot; way instead.&lt;&#x2F;p&gt;
&lt;p&gt;raylib has a &lt;code&gt;build.zig&lt;&#x2F;code&gt;, which means that it can be used directly with Zig&#x27;s package manager.
Its C headers can also be translated into a Zig module that can be &lt;code&gt;@import&lt;&#x2F;code&gt;ed, thanks to Zig&#x27;s built-in C translator.&lt;&#x2F;p&gt;
&lt;p&gt;Note: We will &lt;em&gt;not&lt;&#x2F;em&gt; be using &lt;code&gt;@cImport&lt;&#x2F;code&gt;, since it seems like it&#x27;ll be removed in future versions of Zig.&lt;&#x2F;p&gt;
</summary>
        
    </entry>
    <entry xml:lang="en">
        <title>Announcing Coric&#x27;s Quest</title>
        <published>2024-08-24T00:00:00+00:00</published>
        <updated>2024-08-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              tungtn
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://tung.github.io/posts/announcing-corics-quest/"/>
        <id>https://tung.github.io/posts/announcing-corics-quest/</id>
        
        <content type="html" xml:base="https://tung.github.io/posts/announcing-corics-quest/">
&lt;figure&gt;
  &lt;a href=&quot;&amp;#x2F;projects&amp;#x2F;corics-quest&amp;#x2F;corics-quest-screenshot.png&quot;&gt;&lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;tung.github.io&amp;#x2F;processed_images&amp;#x2F;corics-quest-screenshot.64c73d95ddb3c347.png&quot; alt=&quot;Coric&amp;amp;#x27;s Quest screenshot&quot; title=&quot;Coric&amp;amp;#x27;s Quest screenshot&quot;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;figure&gt;
&lt;p&gt;So here&#x27;s the game I&#x27;ve been working on the the last six months: &lt;em&gt;Coric&#x27;s Quest&lt;&#x2F;em&gt;!
It&#x27;s a free and open source RPG that fits about two hours of game play into a single 9 MB file.
There are native builds for Windows and Linux, and a WebAssembly build that can be played in a web browser.&lt;&#x2F;p&gt;
&lt;p&gt;You can play it right now at &lt;a href=&quot;https:&#x2F;&#x2F;tungtn.itch.io&#x2F;corics-quest&quot;&gt;itch.io&lt;&#x2F;a&gt; and on its &lt;a href=&quot;https:&#x2F;&#x2F;tung.github.io&#x2F;corics-quest&#x2F;&quot;&gt;homepage&lt;&#x2F;a&gt;.
The source code can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tung&#x2F;corics-quest&quot;&gt;on GitHub&lt;&#x2F;a&gt;.
There&#x27;s also a &lt;a href=&quot;https:&#x2F;&#x2F;tung.github.io&#x2F;projects&#x2F;corics-quest&#x2F;&quot;&gt;project page&lt;&#x2F;a&gt; here on this site.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>The Simplest Non-Problematic Damage Formula</title>
        <published>2022-08-02T00:00:00+00:00</published>
        <updated>2022-08-02T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              tungtn
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://tung.github.io/posts/simplest-non-problematic-damage-formula/"/>
        <id>https://tung.github.io/posts/simplest-non-problematic-damage-formula/</id>
        
        <summary type="html">&lt;p&gt;If you&#x27;re designing a game with numeric hit points, attack and defense values, you&#x27;ll eventually have to decide on a &lt;em&gt;damage formula&lt;&#x2F;em&gt; that determines the relationship between them.
The simplest approach possible is to calculate damage as just the difference between attack and defense; that is:&lt;&#x2F;p&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;damage = attack - defense;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It&#x27;s as simple as can be, but it has problems.
The above formula only produces satisfying damage values if attack is higher than defense.
Worse, damage will be zero if attack and defense are equal!
How can we fix this?&lt;&#x2F;p&gt;
</summary>
        
    </entry>
</feed>
